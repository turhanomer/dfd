version: '3.7'

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2024-05-01T01-11-10Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 5s
    timeout: 5s
    retries: 5

services:

  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - minio_net

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - minio_net

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - minio_net

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - minio_net

  postgres:
    image: postgres:16
    container_name: db_postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_DB: dfd
      POSTGRES_USER: dfdUser
      POSTGRES_PASSWORD: dfd2025*
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - minio_net

  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - minio_net

volumes:
  postgres_data:
  data1-1:
  data1-2:
  data2-1:
  data2-2:

networks:
  minio_net:
